caption = "Axis capped at 500 grams <br>
Data: McNeil, D. R. (1977). <br>
Retrieved from Dataset chickwts. <br>
Visualization: Katrin Grings",
family = gp_font_family,
x = NULL,
y = "Chicken Weights"
) +
# Aesthetic adjustments
theme_minimal(base_family = gp_font_family) +
theme(
plot.background = element_rect(color = NA, fill = gp_color),
panel.grid = element_blank(),
panel.grid.major.x = element_line(linewidth = 0.1, color = "grey75"),
plot.title = element_text(family = gp_font_family),
plot.title.position = "plot",
plot.subtitle = element_textbox_simple(margin = margin(t = 4, b = 16), size = 10),
plot.caption = element_textbox_simple(margin = margin(t = 12), size = 7),
plot.caption.position = "plot",
axis.text.y = element_text(hjust = 0.3, margin = margin(r = 0), family = gp_font_family),
panel.spacing = unit(1, "lines"),
plot.margin = margin(4, 4, 4, 4)
)
good_plot_main <- data_good_plot %>%
ggplot(aes(feed, weight)) +
# Distribution of weights
stat_halfeye(fill_type = "segments", alpha = 0.5, width = 0.8) +
# Bars below distribution
stat_interval() +
# Mean of each feed type as a point
stat_summary(geom = "point", fun = mean) +
# Mean weight line
geom_hline(yintercept = mean_weight_all, col = "grey30", lty = "dashed") +
annotate("text", x = 7, y = mean_weight_all, label = "Mean weight",
family = gp_font_family, size = 3, hjust = 0) +
# Annotation for number of chicks per feed type
geom_text(data = mean_weight_feed,
aes(x = feed, y = 75, label = sprintf("(%d)", count)),
family = gp_font_family, size = 3, hjust = 1) +
annotate("text", x = 7, y = 75, label = "(n Chickens)",
family = gp_font_family, size = 3, hjust = 0.5) +
# Scale and label adjustments
scale_x_discrete(labels = toupper, expand = c(0.1, 0)) +
scale_y_continuous(breaks = seq(100, 400, 50)) +
scale_color_manual(values = MetBrewer::met.brewer("Hokusai3")) +
coord_flip(ylim = c(50, 450), clip = "off") +
guides(col = "none") +
# Labels
labs(
title = toupper("Chicken Weight per Feed Type"),
subtitle = plot_subtitle,
caption = "Axis capped at 500 grams <br>
Data: McNeil, D. R. (1977). <br>
Retrieved from Dataset chickwts. <br>
Visualization: Katrin Grings",
family = gp_font_family,
x = NULL,
y = "Chicken Weights"
) +
# Aesthetic adjustments
theme_minimal(base_family = gp_font_family) +
theme(
plot.background = element_rect(color = NA, fill = gp_color),
panel.grid = element_blank(),
panel.grid.major.x = element_line(linewidth = 0.1, color = "grey75"),
plot.title = element_text(family = gp_font_family),
plot.title.position = "plot",
plot.subtitle = element_textbox_simple(margin = margin(t = 4, b = 16), size = 10),
plot.caption = element_textbox_simple(margin = margin(t = 12), size = 7),
plot.caption.position = "plot",
axis.text.y = element_text(hjust = 0.3, margin = margin(r = 0), family = gp_font_family),
panel.spacing = unit(1, "lines"),
plot.margin = margin(4, 4, 4, 4)
)
good_plot_main
# Filter for one feed type to create a custom legend plot
df_for_legend <- chickwts %>%
filter(feed == "sunflower")
good_plot_legend <- df_for_legend %>%
ggplot(aes(feed, weight)) +
# Plot elements
stat_halfeye(fill_type = "segments", alpha = 0.3) +
stat_interval() +
stat_summary(geom = "point", fun = median) +
# Annotations with descriptions
annotate(
"richtext",
x = c(0.5, 0.8, 0.8, 1.6, 2),
y = c(320, 250, 400, 285, 225),
label = c(
"50 % of weight <br>fall within this range",
"95 % of weight", "80 % of weight",
"Mean", "Distribution<br>of weights"
),
fill = NA, label.size = NA, family = gp_font_family, size = 2, vjust = 1
) +
# Arrows for description annotations
geom_curve(
data = data.frame(
x = c(0.50, 0.75, 0.75, 1.4, 2),
xend = c(0.90, 0.90, 0.90, 1.1, 1.8),
y = c(320, 250, 400, 300, 250),
yend = c(330, 275, 370, 325, 325)
),
aes(x = x, xend = xend, y = y, yend = yend),
stat = "unique", curvature = 0.2, size = 0.2, color = "grey12",
arrow = arrow(angle = 20, length = unit(1, "mm"))
) +
# Color scale and layout adjustments
scale_color_manual(values = MetBrewer::met.brewer("Hokusai3")) +
coord_flip(xlim = c(0.1, 1.5), ylim = c(200, 450), expand = TRUE) +
guides(color = "none") +
# Labels and theme adjustments
labs(title = "Legend") +
theme_void(base_family = gp_font_family) +
theme(
plot.title = element_text(family = gp_font_family, size = 9, hjust = 0.75, vjust = 1.5),
plot.background = element_rect(color = "grey30", size = 0.2, fill = gp_color)
)
# Insert the custom legend into the main plot
good_good_plot_final <- good_plot_main +
inset_element(good_plot_legend, l = 0.99, r = 0.7, t = 1, b = 0.5, clip = FALSE)
# Insert the custom legend into the main plot
good_plot_final <- good_plot_main +
inset_element(good_plot_legend, l = 0.99, r = 0.7, t = 1, b = 0.5, clip = FALSE)
good_plot_final
good_plot_main <- data_good_plot %>%
# Distribution of weights
good_plot_main <- data_good_plot %>%
ggplot(aes(feed, weight)) +
# Distribution of weights
stat_halfeye(fill_type = "segments", alpha = 0.5, width = 0.8) +
# Bars below distribution
stat_interval() +
# Mean of each feed type as a point
stat_summary(geom = "point", fun = mean) +
# Mean weight line
geom_hline(yintercept = mean_weight_all, col = "grey30", lty = "dashed") +
annotate("text", x = 7, y = mean_weight_all, label = "Mean weight",
family = gp_font_family, size = 3, hjust = 0) +
# Annotation for number of chicks per feed type
geom_text(data = mean_weight_feed,
aes(x = feed, y = 75, label = sprintf("(%d)", count)),
family = gp_font_family, size = 3, hjust = 1) +
annotate("text", x = 7, y = 75, label = "(n Chickens)",
family = gp_font_family, size = 3, hjust = 0.5) +
# Scale and label adjustments
scale_x_discrete(labels = toupper, expand = c(0.1, 0)) +
scale_y_continuous(breaks = seq(100, 400, 50)) +
scale_color_manual(values = MetBrewer::met.brewer("Hokusai3")) +
coord_flip(ylim = c(50, 450), clip = "off") +
guides(col = "none") +
# Labels
labs(
title = toupper("Chicken Weight per Feed Type"),
subtitle = plot_subtitle,
caption = "Axis capped at 500 grams <br>
Data: McNeil, D. R. (1977). <br>
Retrieved from Dataset chickwts.",
family = gp_font_family,
x = NULL,
y = "Chicken Weights"
) +
# Aesthetic adjustments
theme_minimal(base_family = gp_font_family) +
theme(
plot.background = element_rect(color = NA, fill = gp_color),
panel.grid = element_blank(),
panel.grid.major.x = element_line(linewidth = 0.1, color = "grey75"),
plot.title = element_text(family = gp_font_family),
plot.title.position = "plot",
plot.subtitle = element_textbox_simple(margin = margin(t = 4, b = 16), size = 10),
plot.caption = element_textbox_simple(margin = margin(t = 12), size = 7),
plot.caption.position = "plot",
axis.text.y = element_text(hjust = 0.3, margin = margin(r = 0), family = gp_font_family),
panel.spacing = unit(1, "lines"),
plot.margin = margin(4, 4, 4, 4)
)
good_plot_main <- data_good_plot %>%
ggplot(aes(feed, weight)) +
# Distribution of weights
stat_halfeye(fill_type = "segments", alpha = 0.5, width = 0.8) +
# Bars below distribution
stat_interval() +
# Mean of each feed type as a point
stat_summary(geom = "point", fun = mean) +
# Mean weight line
geom_hline(yintercept = mean_weight_all, col = "grey30", lty = "dashed") +
annotate("text", x = 7, y = mean_weight_all, label = "Mean weight",
family = gp_font_family, size = 3, hjust = 0) +
# Annotation for number of chicks per feed type
geom_text(data = mean_weight_feed,
aes(x = feed, y = 75, label = sprintf("(%d)", count)),
family = gp_font_family, size = 3, hjust = 1) +
annotate("text", x = 7, y = 75, label = "(n Chickens)",
family = gp_font_family, size = 3, hjust = 0.5) +
# Scale and label adjustments
scale_x_discrete(labels = toupper, expand = c(0.1, 0)) +
scale_y_continuous(breaks = seq(100, 400, 50)) +
scale_color_manual(values = MetBrewer::met.brewer("Hokusai3")) +
coord_flip(ylim = c(50, 450), clip = "off") +
guides(col = "none") +
# Labels
labs(
title = toupper("Chicken Weight per Feed Type"),
subtitle = plot_subtitle,
caption = "Axis capped at 500 grams <br>
Data: McNeil, D. R. (1977). <br>
Retrieved from Dataset chickwts.",
family = gp_font_family,
x = NULL,
y = "Chicken Weights"
) +
# Aesthetic adjustments
theme_minimal(base_family = gp_font_family) +
theme(
plot.background = element_rect(color = NA, fill = gp_color),
panel.grid = element_blank(),
panel.grid.major.x = element_line(linewidth = 0.1, color = "grey75"),
plot.title = element_text(family = gp_font_family),
plot.title.position = "plot",
plot.subtitle = element_textbox_simple(margin = margin(t = 4, b = 16), size = 10),
plot.caption = element_textbox_simple(margin = margin(t = 12), size = 7),
plot.caption.position = "plot",
axis.text.y = element_text(hjust = 0.3, margin = margin(r = 0), family = gp_font_family),
panel.spacing = unit(1, "lines"),
plot.margin = margin(4, 4, 4, 4)
)
#Define Font Family
bp_font_family <- pokefont
#Define Font Family
bp_font_family <- "pokefont"
bad_plot <- data_bad_plot
bad_plot <- data_bad_plot %>%
ggplot(aes(y = total_base_stats, x = primary_type)) +
# Interval for attack and distribution plots for defence
stat_interval(aes(y = attack, alpha = 0.8), color = "pink") +
stat_dist_pointinterval(aes(y = defense, alpha = 0.8), color = "blue") +
# Scatter plot for Pokémon with other attributes (category, health point, secondary type)
geom_point(aes(alpha = 0.8, shape = category, size = hp, color = secondary_type)) +
# Annotate specific Pokémon names
geom_text(
aes(label = ifelse(name %in% c("pikachu", "squirtle", "mew", "mewtwo",
"caterpie", "magikarp", "gyarados", "snorlax"),
name, "")),
vjust = -1, size = 3.5, fontface = bp_font_family
) +
# Color scale for secondary types
scale_color_poketype() +
# Flip coordinates for better label spacing
coord_flip() +
# Guide lines
geom_hline(yintercept = seq(300, 650, by = 50), color = "gray90", linetype = "dashed") +
# Theme adjustments
theme_gameboy() +
theme(
panel.grid.major.x = element_line(color = "gray90"),
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
legend.box.margin = margin(t = 10, r = 10, b = 10, l = 10),
legend.box = "horizontal",
legend.justification = "left",
legend.spacing.x = unit(0.5, "cm"),
legend.spacing.y = unit(0.3, "cm"),
legend.position = "bottom",
axis.title = element_text(size = 12, face = bp_font_family),
axis.text.y = element_text(face = bp_font_family),
plot.margin = margin(t = 20, r = 30, b = 30, l = 20)
) +
# Customized legends
guides(
colour = guide_legend(nrow = 3, byrow = TRUE, title.position = "top"),
size = guide_legend(nrow = 3, title.position = "top"), #Change number of legnend rows
shape = guide_legend(nrow = 3, title.position = "top"),
alpha = guide_legend(nrow = 3, title.position = "top")
) +
# Annotate intervals
annotate("text", x = 3, y = 175, label = "Pink: Attack Intervals", color = "pink", fontface = bp_font_family, size = 4) +
annotate("text", x = 4, y = 175, label = "Blue: Defense with Distribution", color = "blue", fontface = bp_font_family, size = 4) +
# Labels for plot
labs(
title = "Pokemon Stats 1st Generation",
y = "Total Base Stats",
x = "Primary Type",
color = "Secondary Type",
size = "Health Points",
shape = "Category",
alpha = "Mean Defense"
)
bad_plot <- data_bad_plot %>%
ggplot(aes(y = total_base_stats, x = primary_type)) +
# Interval for attack and distribution plots for defence
stat_interval(aes(y = attack, alpha = 0.8), color = "pink") +
stat_dist_pointinterval(aes(y = defense, alpha = 0.8), color = "blue") +
# Scatter plot for Pokémon with other attributes (category, health point, secondary type)
geom_point(aes(alpha = 0.8, shape = category, size = hp, color = secondary_type)) +
# Annotate specific Pokémon names
geom_text(
aes(label = ifelse(name %in% c("pikachu", "squirtle", "mew", "mewtwo",
"caterpie", "magikarp", "gyarados", "snorlax"),
name, "")),
vjust = -1, size = 3.5, fontface = bp_font_family
) +
# Color scale for secondary types
scale_color_poketype() +
# Flip coordinates for better label spacing
coord_flip() +
# Guide lines
geom_hline(yintercept = seq(300, 650, by = 50), color = "gray90", linetype = "dashed") +
# Theme adjustments
theme_gameboy() +
theme(
panel.grid.major.x = element_line(color = "gray90"),
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
legend.box.margin = margin(t = 10, r = 10, b = 10, l = 10),
legend.box = "horizontal",
legend.justification = "left",
legend.spacing.x = unit(0.5, "cm"),
legend.spacing.y = unit(0.3, "cm"),
legend.position = "bottom",
axis.title = element_text(size = 12, face = bp_font_family),
axis.text.y = element_text(face = bp_font_family),
plot.margin = margin(t = 20, r = 30, b = 30, l = 20)
) +
# Customized legends
guides(
colour = guide_legend(nrow = 3, byrow = TRUE, title.position = "top"),
size = guide_legend(nrow = 3, title.position = "top"), #Change number of legnend rows
shape = guide_legend(nrow = 3, title.position = "top"),
alpha = guide_legend(nrow = 3, title.position = "top")
) +
# Annotate intervals
annotate("text", x = 3, y = 175, label = "Pink: Attack Intervals", color = "pink", fontface = bp_font_family, size = 4) +
annotate("text", x = 4, y = 175, label = "Blue: Defense with Distribution", color = "blue", fontface = bp_font_family, size = 4) +
# Labels for plot
labs(
title = "Pokemon Stats 1st Generation",
y = "Total Base Stats",
x = "Primary Type",
color = "Secondary Type",
size = "Health Points",
shape = "Category",
alpha = "Mean Defense"
)
bad_plot
bad_plot <- data_bad_plot %>%
ggplot(aes(y = total_base_stats, x = primary_type)) +
# Interval for attack and distribution plots for defence
stat_interval(aes(y = attack, alpha = 0.8), color = "pink") +
stat_dist_pointinterval(aes(y = defense, alpha = 0.8), color = "blue") +
# Scatter plot for Pokémon with other attributes (category, health point, secondary type)
geom_point(aes(alpha = 0.8, shape = category, size = hp, color = secondary_type)) +
# Annotate specific Pokémon names
geom_text(
aes(label = ifelse(name %in% c("pikachu", "squirtle", "mew", "mewtwo",
"caterpie", "magikarp", "gyarados", "snorlax"),
name, "")),
vjust = -1, size = 3.5
) +
# Color scale for secondary types
scale_color_poketype() +
# Flip coordinates for better label spacing
coord_flip() +
# Guide lines
geom_hline(yintercept = seq(300, 650, by = 50), color = "gray90", linetype = "dashed") +
# Theme adjustments
theme_gameboy() +
theme(
panel.grid.major.x = element_line(color = "gray90"),
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
legend.box.margin = margin(t = 10, r = 10, b = 10, l = 10),
legend.box = "horizontal",
legend.justification = "left",
legend.spacing.x = unit(0.5, "cm"),
legend.spacing.y = unit(0.3, "cm"),
legend.position = "bottom",
axis.title = element_text(size = 12),
axis.text.y = element_text(),
plot.margin = margin(t = 20, r = 30, b = 30, l = 20)
) +
# Customized legends
guides(
colour = guide_legend(nrow = 3, byrow = TRUE, title.position = "top"),
size = guide_legend(nrow = 3, title.position = "top"), #Change number of legnend rows
shape = guide_legend(nrow = 3, title.position = "top"),
alpha = guide_legend(nrow = 3, title.position = "top")
) +
# Annotate intervals
annotate("text", x = 3, y = 175, label = "Pink: Attack Intervals", color = "pink", fontface = bp_font_family, size = 4) +
annotate("text", x = 4, y = 175, label = "Blue: Defense with Distribution", color = "blue", fontface = bp_font_family, size = 4) +
# Labels for plot
labs(
title = "Pokemon Stats 1st Generation",
y = "Total Base Stats",
x = "Primary Type",
color = "Secondary Type",
size = "Health Points",
shape = "Category",
alpha = "Mean Defense"
)
bad_plot
bad_plot <- data_bad_plot %>%
ggplot(aes(y = total_base_stats, x = primary_type)) +
# Interval for attack and distribution plots for defence
stat_interval(aes(y = attack, alpha = 0.8), color = "pink") +
stat_dist_pointinterval(aes(y = defense, alpha = 0.8), color = "blue") +
# Scatter plot for Pokémon with other attributes (category, health point, secondary type)
geom_point(aes(alpha = 0.8, shape = category, size = hp, color = secondary_type)) +
# Annotate specific Pokémon names
geom_text(
aes(label = ifelse(name %in% c("pikachu", "squirtle", "mew", "mewtwo",
"caterpie", "magikarp", "gyarados", "snorlax"),
name, "")),
vjust = -1, size = 3.5
) +
# Color scale for secondary types
scale_color_poketype() +
# Flip coordinates for better label spacing
coord_flip() +
# Guide lines
geom_hline(yintercept = seq(300, 650, by = 50), color = "gray90", linetype = "dashed") +
# Theme adjustments
theme_gameboy() +
theme(
panel.grid.major.x = element_line(color = "gray90"),
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
legend.box.margin = margin(t = 10, r = 10, b = 10, l = 10),
legend.box = "horizontal",
legend.justification = "left",
legend.spacing.x = unit(0.5, "cm"),
legend.spacing.y = unit(0.3, "cm"),
legend.position = "bottom",
axis.title = element_text(size = 12),
axis.text.y = element_text(),
plot.margin = margin(t = 20, r = 30, b = 30, l = 20)
) +
# Customized legends
guides(
colour = guide_legend(nrow = 3, byrow = TRUE, title.position = "top"),
size = guide_legend(nrow = 3, title.position = "top"), #Change number of legnend rows
shape = guide_legend(nrow = 3, title.position = "top"),
alpha = guide_legend(nrow = 3, title.position = "top")
) +
# Annotate intervals
annotate("text", x = 3, y = 175, label = "Pink: Attack Intervals", color = "pink", size = 4) +
annotate("text", x = 4, y = 175, label = "Blue: Defense with Distribution", color = "blue", size = 4) +
# Labels for plot
labs(
title = "Pokemon Stats 1st Generation",
y = "Total Base Stats",
x = "Primary Type",
color = "Secondary Type",
size = "Health Points",
shape = "Category",
alpha = "Mean Defense"
)
bad_plot
bad_plot <- data_bad_plot %>%
ggplot(aes(y = total_base_stats, x = primary_type)) +
# Interval for attack and distribution plots for defence
stat_interval(aes(y = attack, alpha = 0.8), color = "pink") +
stat_dist_pointinterval(aes(y = defense, alpha = 0.8), color = "blue") +
# Scatter plot for Pokémon with other attributes (category, health point, secondary type)
geom_point(aes(alpha = 0.8, shape = category, size = hp, color = secondary_type)) +
# Annotate specific Pokémon names
geom_text(
aes(label = ifelse(name %in% c("pikachu", "squirtle", "mew", "mewtwo",
"caterpie", "magikarp", "gyarados", "snorlax"),
name, "")),
vjust = -1, size = 3.5
) +
# Color scale for secondary types
scale_color_poketype() +
# Flip coordinates for better label spacing
coord_flip() +
# Guide lines
geom_hline(yintercept = seq(300, 650, by = 50), color = "gray90", linetype = "dashed") +
# Theme adjustments
theme_gameboy() +
theme(
panel.grid.major.x = element_line(color = "gray90"),
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
legend.box.margin = margin(t = 10, r = 10, b = 10, l = 10),
legend.box = "horizontal",
legend.justification = "left",
legend.spacing.x = unit(0.5, "cm"),
legend.spacing.y = unit(0.3, "cm"),
legend.position = "bottom",
axis.title = element_text(size = 12),
axis.text.y = element_text(),
plot.margin = margin(t = 20, r = 30, b = 30, l = 20)
) +
# Customized legends
guides(
colour = guide_legend(nrow = 3, byrow = TRUE, title.position = "top"),
size = guide_legend(nrow = 3, title.position = "top"), #Change number of legnend rows
shape = guide_legend(nrow = 3, title.position = "top"),
alpha = guide_legend(nrow = 3, title.position = "top")
) +
# Annotate intervals
annotate("text", x = 3, y = 175, label = "Pink: Attack Intervals", color = "pink", size = 4, family = "pokefont") +
annotate("text", x = 4, y = 175, label = "Blue: Defense with Distribution", color = "blue", size = 4, family = "pokefont") +
# Labels for plot
labs(
title = "Pokemon Stats 1st Generation",
y = "Total Base Stats",
x = "Primary Type",
color = "Secondary Type",
size = "Health Points",
shape = "Category",
alpha = "Mean Defense"
)
bad_plot
